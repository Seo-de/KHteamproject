/* 코사랑 DB */
CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(50)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(100)		NOT NULL,
	"MEMBER_NAME"	VARCHAR2(30)		NOT NULL,
	"MEMBER_BIRTH"	CHAR(10)		NOT NULL,
	"MEMBER_TEL"	CHAR(11)		NOT NULL,
	"AUTHORITY"	CHAR(1)	DEFAULT 0	NOT NULL,
	"MEMBER_STATUS"	CHAR(1)	DEFAULT 0	NOT NULL,
	"SIGNUP_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"DEL_DATE"	DATE		NULL
);


COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원 이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_BIRTH" IS '회원 생일';

COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '회원 전화번호';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '회원 이미지 경로';

COMMENT ON COLUMN "MEMBER"."AUTHORITY" IS '회원 권한 (0: 회원 / 1: 관리자)';

COMMENT ON COLUMN "MEMBER"."MEMBER_STATUS" IS '회원 상태 (0 : 정상 / 1 : 정지 / 2 : 탈퇴)';

COMMENT ON COLUMN "MEMBER"."SIGNUP_DATE" IS '회원가입 날짜';

COMMENT ON COLUMN "MEMBER"."DEL_DATE" IS '회원탈퇴 날짜';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "GROUP" (
	"GROUP_NO"	NUMBER		NOT NULL,
	"TOPIC_CODE"	NUMBER		NOT NULL,
	"GROUP_NAME"	VARCHAR2(150)		NOT NULL,
	"GROUP_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"GROUP_COMMENT"	VARCHAR2(1000)		NULL,
	"OPEN_YN"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"GROUP_STATUS"	CHAR(1)	DEFAULT 0	NOT NULL
);

COMMENT ON COLUMN "GROUP"."GROUP_NO" IS '소모임 번호(SEQ_GROUP_NO)';

COMMENT ON COLUMN "GROUP"."TOPIC_CODE" IS '소모임 주제 코드';

COMMENT ON COLUMN "GROUP"."GROUP_NAME" IS '소모임 이름';

COMMENT ON COLUMN "GROUP"."GROUP_DATE" IS '소모임 개설일';

COMMENT ON COLUMN "GROUP"."GROUP_IMG" IS '소모임 대표 이미지';

COMMENT ON COLUMN "GROUP"."GROUP_COMMENT" IS '소모임 소개글';

COMMENT ON COLUMN "GROUP"."OPEN_YN" IS '외부인의  게시글 조회(N : 불가 / Y : 가능)';

COMMENT ON COLUMN "GROUP"."GROUP_STATUS" IS '소모임 상태(0: 정상 / 1: 정지 / 2 : 삭제된 소모임)';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "MEMBER_JOIN" (
	"JOIN_NO"	NUMBER		NOT NULL,
	"GROUP_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"LEADER_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"JOIN_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"JOIN_STATUS"	CHAR	DEFAULT 0	NOT NULL,
	"LEAVE_DATE"	DATE		NULL
);


COMMENT ON COLUMN "MEMBER_JOIN"."JOIN_NO" IS '가입 기록 번호(SEQ_JOIN_NO)';

COMMENT ON COLUMN "MEMBER_JOIN"."GROUP_NO" IS '가입한 소모임 번호';

COMMENT ON COLUMN "MEMBER_JOIN"."MEMBER_NO" IS '가입한 회원 번호';

COMMENT ON COLUMN "MEMBER_JOIN"."LEADER_YN" IS '모임 내 권한(N:회원 / Y:모임장)';

COMMENT ON COLUMN "MEMBER_JOIN"."JOIN_DATE" IS '모임에 가입한 날짜';

COMMENT ON COLUMN "MEMBER_JOIN"."JOIN_STATUS" IS '가입한 회원의 상태(0:정상/1:정지/2:탈퇴)';

COMMENT ON COLUMN "MEMBER_JOIN"."LEAVE_DATE" IS '모임에서 탈퇴한 날짜';


COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "GROUP_TOPIC" (
	"TOPIC_CODE"	NUMBER		NOT NULL,
	"TOPIC_NAME"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "GROUP_TOPIC"."TOPIC_CODE" IS '주제 구분 번호';

COMMENT ON COLUMN "GROUP_TOPIC"."TOPIC_NAME" IS '주제 내용';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "POST" (
	"POST_NO"	NUMBER		NOT NULL,
	"GROUP_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"POST_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"POST_VIEW"	NUMBER		NOT NULL,
	"REPLY_YN"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"POST_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"EDIT_DATE"	DATE		NULL,
	"INFORM_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"POST_DEL_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

COMMENT ON COLUMN "POST"."POST_NO" IS '게시글 번호(SEQ_POST_NO)';

COMMENT ON COLUMN "POST"."GROUP_NO" IS '게시글 작성된 소모임 번호';

COMMENT ON COLUMN "POST"."MEMBER_NO" IS '게시글 작성한 회원 번호';

COMMENT ON COLUMN "POST"."POST_CONTENT" IS '게시글의 내용';

COMMENT ON COLUMN "POST"."POST_VIEW" IS '조회수';

COMMENT ON COLUMN "POST"."REPLY_YN" IS '게시글에 댓글 달기(N : 불가 / Y : 가능)';

COMMENT ON COLUMN "POST"."POST_DATE" IS '게시글 작성일';

COMMENT ON COLUMN "POST"."EDIT_DATE" IS '게시글 마지막 수정일';

COMMENT ON COLUMN "POST"."INFORM_YN" IS '공지사항 지정 여부(N : 일반글 / Y : 공지글)';

COMMENT ON COLUMN "POST"."POST_DEL_YN" IS '게시글 삭제 여부(N : 삭제안됨 / Y : 삭제됨)';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "POST_IMG" (
	"IMG_NO"	NUMBER		NOT NULL,
	"POST_NO"	NUMBER		NOT NULL,
	"IMG_ORIGINAL"	VARCHAR2(300)		NOT NULL,
	"IMG_RENAME"	VARCHAR2(30)		NOT NULL,
	"IMG_PATH"	VARCHAR2(300)		NOT NULL,
	"IMG_ORDER"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "POST_IMG"."IMG_NO" IS '이미지 관리 번호(SEQ_IMG_NO)';

COMMENT ON COLUMN "POST_IMG"."POST_NO" IS '이미지가 첨부된 게시글 번호';

COMMENT ON COLUMN "POST_IMG"."IMG_ORIGINAL" IS '이미지 원래 이름';

COMMENT ON COLUMN "POST_IMG"."IMG_RENAME" IS '이미지 등록 시 수정된 이름';

COMMENT ON COLUMN "POST_IMG"."IMG_PATH" IS '이미지 저장 경로';

COMMENT ON COLUMN "POST_IMG"."IMG_ORDER" IS '게시글 내 이미지 순서';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "POST_LIKE" (
	"POST_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "POST_LIKE"."POST_NO" IS '좋아요를 눌러진 게시글 번호';

COMMENT ON COLUMN "POST_LIKE"."MEMBER_NO" IS '좋아요를 누른 회원의 번호';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "REPLY" (
	"REPLY_NO"	NUMBER		NOT NULL,
	"POST_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"REPLY_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"REPLY_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"REPLY_DEL_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"PARENT_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REPLY"."REPLY_NO" IS '댓글 관리 번호(SEQ_REPLY_NO)';

COMMENT ON COLUMN "REPLY"."POST_NO" IS '댓글이 달린 게시글 번호';

COMMENT ON COLUMN "REPLY"."MEMBER_NO" IS '댓글 작성한 회원의 번호';

COMMENT ON COLUMN "REPLY"."REPLY_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "REPLY"."REPLY_DATE" IS '댓글 작성일';

COMMENT ON COLUMN "REPLY"."REPLY_DEL_YN" IS '댓글 삭제 여부 (N : 삭제됨 / Y : 삭제 안됨)';

COMMENT ON COLUMN "REPLY"."PARENT_NO" IS '상위 댓글의 댓글 번호';


COMMIT;

-----------------------------------------------------------------------------------------------


CREATE TABLE "REPLY_LIKE" (
	"REPLY_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REPLY_LIKE"."REPLY_NO" IS '좋아요가 눌러진 댓글 번호';

COMMENT ON COLUMN "REPLY_LIKE"."MEMBER_NO" IS '좋아요 누른 회원 번호';

COMMIT;

-----------------------------------------------------------------------------------------------


CREATE TABLE "MEMBER_BAN" (
	"M_BAN_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"M_BAN_BEGIN"	DATE	DEFAULT SYSDATE	NOT NULL,
	"M_BAN_END"	DATE		NULL,
	"M_EXPIRED_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

COMMENT ON COLUMN "MEMBER_BAN"."M_BAN_NO" IS '회원 정지기록 번호(SEQ_M_BAN_NO)';

COMMENT ON COLUMN "MEMBER_BAN"."MEMBER_NO" IS '정지된 회원 번호';

COMMENT ON COLUMN "MEMBER_BAN"."M_BAN_BEGIN" IS '정지 시작일';

COMMENT ON COLUMN "MEMBER_BAN"."M_BAN_END" IS '정지 종료일';

COMMENT ON COLUMN "MEMBER_BAN"."M_EXPIRED_YN" IS '정지기간 종료 여부(N:정지중 / Y:정지기간 만료)';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "GROUP_BAN" (
	"G_BAN_NO"	NUMBER		NOT NULL,
	"GROUP_NO"	NUMBER		NOT NULL,
	"G_BEGIN_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"G_END_DATE"	DATE		NULL,
	"G_EXPIRED_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

COMMENT ON COLUMN "GROUP_BAN"."G_BAN_NO" IS '모임 정지 번호(SEQ_G_BAN_NO)';

COMMENT ON COLUMN "GROUP_BAN"."GROUP_NO" IS '정지된 소모임 번호';

COMMENT ON COLUMN "GROUP_BAN"."G_BEGIN_DATE" IS '정지 시작일';

COMMENT ON COLUMN "GROUP_BAN"."G_END_DATE" IS '정지 종료일';

COMMENT ON COLUMN "GROUP_BAN"."G_EXPIRED_YN" IS '정지 기간 만료 여부 ( 정지중(N) / 정지기간 끝(Y) )';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "REPORT_TYPE" (
	"TYPE_CODE"	NUMBER		NOT NULL,
	"TYPE_DETAILS"	VARCHAR2(15)		NOT NULL
);

COMMENT ON COLUMN "REPORT_TYPE"."TYPE_CODE" IS '신고 유형 코드';

COMMENT ON COLUMN "REPORT_TYPE"."TYPE_DETAILS" IS '신고 유형 상세';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "REPORT_REASON" (
	"REASON_CODE"	NUMBER		NOT NULL,
	"TYPE_CODE"	NUMBER		NOT NULL,
	"REASON_DETAILS"	VARCHAR2(90)		NOT NULL
);

COMMENT ON COLUMN "REPORT_REASON"."REASON_CODE" IS '신고 사유  코드';

COMMENT ON COLUMN "REPORT_REASON"."TYPE_CODE" IS '신고 대상의 유형 (1: 회원 / 2: 모임 / 3 : 게시글';

COMMENT ON COLUMN "REPORT_REASON"."REASON_DETAILS" IS '신고한 사유';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "REPORT" (
	"REPORT_NO"	NUMBER		NOT NULL,
	"REASON_CODE"	NUMBER		NOT NULL,
	"TYPE_CODE"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"TARGET_NO"	NUMBER		NOT NULL,
	"REPORT_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"RESULT_CODE"	NUMBER		NOT NULL,
	"PROCESS_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"PROCESS_DATE"	DATE		NULL,
	"EXPIRE_YN" CHAR(1) DEFAULT 'N' NOT NULL,
	"EXPIRE_DATE" DATE NULL
);

COMMENT ON COLUMN "REPORT"."REPORT_NO" IS '신고 관리 번호(SEQ_REPORT_NO)';

COMMENT ON COLUMN "REPORT"."REASON_CODE" IS '신고한 이유';

COMMENT ON COLUMN "REPORT"."TYPE_CODE" IS '신고 대상의 유형 (1:회원 / 2:모임 / 3:게시글)';

COMMENT ON COLUMN "REPORT"."MEMBER_NO" IS '신고한 회원의 번호';

COMMENT ON COLUMN "REPORT"."TARGET_NO" IS '신고 대상의 번호';

COMMENT ON COLUMN "REPORT"."REPORT_DATE" IS '신고 날짜';

COMMENT ON COLUMN "REPORT"."RESULT_CODE" IS '처리 결과';

COMMENT ON COLUMN "REPORT"."PROCESS_YN" IS '신고 처리여부 (N : 처리중 / Y : 처리완료)';

COMMENT ON COLUMN "REPORT"."PROCESS_DATE" IS '처리된 날짜';

COMMENT ON COLUMN "REPORT"."EXPIRE_YN" IS '신고 만료 여부';

COMMENT ON COLUMN "REPORT"."EXPIRE_DATE" IS '신고 만료 기한';

COMMIT;

-----------------------------------------------------------------------------------------------

CREATE TABLE "REPORT_RESULT" (
	"RESULT_CODE"	NUMBER		NOT NULL,
	"RESULT_DETAILS"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "REPORT_RESULT"."RESULT_CODE" IS '신고 처리결과 코드';

COMMENT ON COLUMN "REPORT_RESULT"."RESULT_DETAILS" IS '신고 처리결과 상세';

COMMIT;

-----------------------------------------------------------------------------------------------


ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "GROUP" ADD CONSTRAINT "PK_GROUP" PRIMARY KEY (
	"GROUP_NO"
);

ALTER TABLE "MEMBER_JOIN" ADD CONSTRAINT "PK_JOIN" PRIMARY KEY (
	"JOIN_NO"
);

ALTER TABLE "GROUP_TOPIC" ADD CONSTRAINT "PK_GROUP_TOPIC" PRIMARY KEY (
	"TOPIC_CODE"
);

ALTER TABLE "POST" ADD CONSTRAINT "PK_POST" PRIMARY KEY (
	"POST_NO"
);

ALTER TABLE "POST_IMG" ADD CONSTRAINT "PK_POST_IMG" PRIMARY KEY (
	"IMG_NO"
);

ALTER TABLE "POST_LIKE" ADD CONSTRAINT "PK_POST_LIKE" PRIMARY KEY (
	"POST_NO",
	"MEMBER_NO"
);


COMMIT;

-----------------------------------------------------------------------------------------------

ALTER TABLE "REPLY" ADD CONSTRAINT "PK_REPLY" PRIMARY KEY (
	"REPLY_NO"
);

ALTER TABLE "REPLY_LIKE" ADD CONSTRAINT "PK_REPLY_LIKE" PRIMARY KEY (
	"REPLY_NO",
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_BAN" ADD CONSTRAINT "PK_MEMBER_BAN" PRIMARY KEY (
	"M_BAN_NO",
	"MEMBER_NO"
);

ALTER TABLE "GROUP_BAN" ADD CONSTRAINT "PK_GROUP_BAN" PRIMARY KEY (
	"G_BAN_NO",
	"GROUP_NO"
);

ALTER TABLE "REPORT_TYPE" ADD CONSTRAINT "PK_REPORT_TYPE" PRIMARY KEY (
	"TYPE_CODE"
);

ALTER TABLE "REPORT_REASON" ADD CONSTRAINT "PK_REPORT_REASON" PRIMARY KEY (
	"REASON_CODE"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "PK_REPORT" PRIMARY KEY (
	"REPORT_NO"
);

ALTER TABLE "REPORT_RESULT" ADD CONSTRAINT "PK_REPORT_RESULT" PRIMARY KEY (
	"RESULT_CODE"
);


COMMIT;

------------------------------------------------------------------------------

ALTER TABLE "POST_LIKE" ADD CONSTRAINT "FK_POST_LIKE_POST_NO" FOREIGN KEY (
	"POST_NO"
)
REFERENCES "POST" (
	"POST_NO"
);

ALTER TABLE "POST_LIKE" ADD CONSTRAINT "FK_POST_LIKE_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPLY_LIKE" ADD CONSTRAINT "FK_REPLY_LIKE_REPLY_NO" FOREIGN KEY (
	"REPLY_NO"
)
REFERENCES "REPLY" (
	"REPLY_NO"
);

ALTER TABLE "REPLY_LIKE" ADD CONSTRAINT "FK_REPLY_LIKE_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_BAN" ADD CONSTRAINT "FK_MEMBER_BAN_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "GROUP_BAN" ADD CONSTRAINT "FK_GROUP_BAN_GROUP_NO" FOREIGN KEY (
	"GROUP_NO"
)
REFERENCES "GROUP" (
	"GROUP_NO"
);

COMMIT;
-----------------------------------------------------------------------------------------------

ALTER TABLE "GROUP" ADD CONSTRAINT "FK_GROUP_TOPIC_CODE" FOREIGN KEY (
	"TOPIC_CODE"
)
REFERENCES "GROUP_TOPIC" (
	"TOPIC_CODE"
);

ALTER TABLE "MEMBER_JOIN" ADD CONSTRAINT "FK_MEMBER_JOIN_GROUP_NO" FOREIGN KEY (
	"GROUP_NO"
)
REFERENCES "GROUP" (
	"GROUP_NO"
);

ALTER TABLE "MEMBER_JOIN" ADD CONSTRAINT "FK_MEMBER_JOIN_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

COMMIT;
-----------------------------------------------------------------------------------------------

ALTER TABLE "POST" ADD CONSTRAINT "FK_POST_GROUP_NO" FOREIGN KEY (
	"GROUP_NO"
)
REFERENCES "GROUP" (
	"GROUP_NO"
);

ALTER TABLE "POST" ADD CONSTRAINT "FK_POST_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "POST_IMG" ADD CONSTRAINT "FK_POST_IMG_POST_NO" FOREIGN KEY (
	"POST_NO"
)
REFERENCES "POST" (
	"POST_NO"
);

COMMIT;
-----------------------------------------------------------------------------------------------

ALTER TABLE "REPLY" ADD CONSTRAINT "FK_REPLY_POST_NO" FOREIGN KEY (
	"POST_NO"
)
REFERENCES "POST" (
	"POST_NO"
);

ALTER TABLE "REPLY" ADD CONSTRAINT "FK_REPLY_MEMBER_NO" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

COMMIT;
-----------------------------------------------------------------------------------------------


ALTER TABLE "REPORT" ADD CONSTRAINT "FK_REPORT_REASON_CODE" FOREIGN KEY (
	"REASON_CODE"
)
REFERENCES "REPORT_REASON" (
	"REASON_CODE"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_REPORT_TYPE_CODE" FOREIGN KEY (
	"TYPE_CODE"
)
REFERENCES "REPORT_TYPE" (
	"TYPE_CODE"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_REPORT_RESULT_CODE" FOREIGN KEY (
	"RESULT_CODE"
)
REFERENCES "REPORT_RESULT" (
	"RESULT_CODE"
);


COMMIT;
-----------------------------------------------------------------------------------------------

ALTER TABLE "REPORT_REASON" ADD CONSTRAINT "FK_REPORT_REASON_REPORT_TYPE" FOREIGN KEY (
	"TYPE_CODE"
)
REFERENCES "REPORT_TYPE" (
	"TYPE_CODE"
);


COMMIT;
-----------------------------------------------------------------------------------------------

--------------------------------------
/* 시퀀스 만들기 */
CREATE SEQUENCE SEQ_MEMBER_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

CREATE SEQUENCE SEQ_M_BAN_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

CREATE SEQUENCE SEQ_MEMBER_JOIN_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

----
CREATE SEQUENCE SEQ_GROUP_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

CREATE SEQUENCE SEQ_G_BAN_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)
-----

CREATE SEQUENCE SEQ_POST_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)


CREATE SEQUENCE SEQ_IMG_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

------
CREATE SEQUENCE SEQ_REPLY_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

------

------
CREATE SEQUENCE SEQ_REPORT_NO
NOCYCLE -- 반복 없음(기본값)
NOCACHE; -- 캐시 없음(캐시의 기본값은 20BYTE)

COMMIT;
------
/* 일부 테이블 기본값 세팅 */


/* 모임 주제(관심분야) */
INSERT INTO "GROUP_TOPIC" VALUES(1, '운동');
INSERT INTO "GROUP_TOPIC" VALUES(2, '공예');
INSERT INTO "GROUP_TOPIC" VALUES(3, '게임');
INSERT INTO "GROUP_TOPIC" VALUES(4, '팬클럽');
INSERT INTO "GROUP_TOPIC" VALUES(5, '문화, 예술');
INSERT INTO "GROUP_TOPIC" VALUES(6, '자연, 귀농');
INSERT INTO "GROUP_TOPIC" VALUES(7, '여행, 캠핑');
INSERT INTO "GROUP_TOPIC" VALUES(8, '요리');
INSERT INTO "GROUP_TOPIC" VALUES(9, '경제, 재테크');
INSERT INTO "GROUP_TOPIC" VALUES(10, '사진');
INSERT INTO "GROUP_TOPIC" VALUES(11, '인테리어');
INSERT INTO "GROUP_TOPIC" VALUES(12, '자기계발');

COMMIT;

-----------------------------------------------------------------------------------------------

/* 처리 결과 목록 */
INSERT INTO "REPORT_RESULT" VALUES(1, '반려');
INSERT INTO "REPORT_RESULT" VALUES(2, '7일 정지');
INSERT INTO "REPORT_RESULT" VALUES(3, '30일 정지');
INSERT INTO "REPORT_RESULT" VALUES(4, '영구 정지');
INSERT INTO "REPORT_RESULT" VALUES(5, '삭제');

COMMIT;

-----------------------------------------------------------------------------------------------

/* 신고 유형 목록 */
INSERT INTO "REPORT_TYPE" VALUES(1, '회원');
INSERT INTO "REPORT_TYPE" VALUES(2, '모임');
INSERT INTO "REPORT_TYPE" VALUES(3, '게시글');

COMMIT;

-----------------------------------------------------------------------------------------------

/* 신고 사유 목록 */
INSERT INTO "REPORT_REASON" VALUES(101, 1, '회원 사유1');
INSERT INTO "REPORT_REASON" VALUES(102, 1, '회원 사유2');
INSERT INTO "REPORT_REASON" VALUES(103, 1, '회원 사유3');

INSERT INTO "REPORT_REASON" VALUES(201, 2, '모임 사유1');
INSERT INTO "REPORT_REASON" VALUES(202, 2, '모임 사유2');
INSERT INTO "REPORT_REASON" VALUES(203, 2, '모임 사유3');

INSERT INTO "REPORT_REASON" VALUES(301, 3, '게시글 사유1');
INSERT INTO "REPORT_REASON" VALUES(302, 3, '게시글 사유2');
INSERT INTO "REPORT_REASON" VALUES(303, 3, '게시글 사유3');

COMMIT;

-----------------------------------------------------------------------

/* PLAN 테이블 */
CREATE TABLE "POST_PLAN" (
	"PLAN_NO"	NUMBER		NOT NULL,
	"GROUP_NO"  NUMBER 		NOT NULL,
	"POST_NO"	NUMBER		NOT NULL,
	"PLAN_TITLE"	VARCHAR2(150)		NOT NULL,
	"PLAN_CONTENT"	VARCHAR2(600)		NULL,
	"PLAN_START"	DATE		NOT NULL,
	"PLAN_END"	DATE		NULL,
	"PLAN_COLOR" VARCHAR2(20) DEFAULT 'rgb(55,136,216)' NOT NULL
);


/* CALENDAR TABLE COMMENT*/
COMMENT ON COLUMN "POST_PLAN"."PLAN_NO" IS '일정 번호(SEQ_PLAN_NO)';

COMMENT ON COLUMN "POST_PLAN"."POST_NO" IS '게시글 번호(SEQ_POST_NO)';

COMMENT ON COLUMN "POST_PLAN"."GROUP_NO" IS '모임 번호(SEQ_GROUP_NO)';

COMMENT ON COLUMN "POST_PLAN"."PLAN_TITLE" IS '제목(한글 50자 이내)';

COMMENT ON COLUMN "POST_PLAN"."PLAN_CONTENT" IS '내용(한글 200자 이내)';

COMMENT ON COLUMN "POST_PLAN"."PLAN_START" IS '시작 날짜';

COMMENT ON COLUMN "POST_PLAN"."PLAN_END" IS '종료 날짜';

COMMENT ON COLUMN "POST_PLAN"."PLAN_COLOR" IS '일정 색깔';



/* CALENDAR TABLE CONSTRAINTS */
ALTER TABLE "POST_PLAN" ADD CONSTRAINT "PK_POST_PLAN" PRIMARY KEY (
	"PLAN_NO"
);

ALTER TABLE "POST_PLAN" ADD CONSTRAINT "FK_POST_PLAN_GROUP_NO" FOREIGN KEY (
	"GROUP_NO"
)
REFERENCES "GROUP" (
	"GROUP_NO"
);


/* CALENDAR TABLE SEQ */
CREATE SEQUENCE SEQ_PLAN_NO
NOCYCLE
NOCACHE;

COMMIT;

-----------------------------------------------------------------------------------------------

/* GRUOP_IMG */
CREATE TABLE "GROUP_IMG" (
	"GROUP_IMG_NO"	NUMBER		NOT NULL,
	"GROUP_NO"	NUMBER		NOT NULL,
	"GROUP_IMG_ORIGIN"	VARCHAR2(300)		NOT NULL,
	"GROUP_IMG_RENAME"	VARCHAR2(30)		NOT NULL,
	"GROUP_IMG_PATH"	VARCHAR2(300)		NOT NULL
);

COMMENT ON COLUMN "GROUP_IMG"."GROUP_IMG_NO" IS '사진 번호(SEQ_GROUP_IMG_NO)';

COMMENT ON COLUMN "GROUP_IMG"."GROUP_NO" IS '소모임 번호(SEQ_GROUP_NO)';

COMMENT ON COLUMN "GROUP_IMG"."GROUP_IMG_ORIGIN" IS '사진 원본 이름';

COMMENT ON COLUMN "GROUP_IMG"."GROUP_IMG_RENAME" IS '사진 수정된 이름';

COMMENT ON COLUMN "GROUP_IMG"."GROUP_IMG_PATH" IS '사진 저장 경로';


ALTER TABLE "GROUP_IMG" ADD CONSTRAINT "PK_GROUP_IMG" PRIMARY KEY (
	"GROUP_IMG_NO"
);

COMMIT;

-----------------------------------------------------------------------------------------------

/* MEMBER_IMG */
CREATE TABLE "MEMBER_IMG" (
	"MEMBER_IMG_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_IMG_ORIGIN"	VARCHAR2(300)		NOT NULL,
	"MEMBER_IMG_RENAME"	VARCHAR2(30)		NOT NULL,
	"MEMBER_IMG_PATH"	VARCHAR2(300)		NOT NULL
);

COMMENT ON COLUMN "MEMBER_IMG"."MEMBER_IMG_NO" IS '사진 번호(SEQ_MEMBER_IMG_NO)';

COMMENT ON COLUMN "MEMBER_IMG"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_IMG"."MEMBER_IMG_ORIGIN" IS '사진 원본 이름';

COMMENT ON COLUMN "MEMBER_IMG"."MEMBER_IMG_RENAME" IS '사진 수정된 이름';

COMMENT ON COLUMN "MEMBER_IMG"."MEMBER_IMG_PATH" IS '사진 저장 경로';

ALTER TABLE "MEMBER_IMG" ADD CONSTRAINT "PK_MEMBER_IMG" PRIMARY KEY (
	"MEMBER_IMG_NO"
);





UPDATE "MEMBER" SET
MEMBER_NO=0,
 MEMBER_NAME = '관리자'
WHERE MEMBER_EMAIL = 'admin@kosaran'
;

INSERT INTO "MEMBER_JOIN"
VALUES(SEQ_MEMBER_JOIN_NO.NEXTVAL, 1, 21, 'N', DEFAULT, '0', NULL);


SELECT * FROM "MEMBER";
SELECT * FROM "MEMBER_IMG";
SELECT * FROM "GROUP";
SELECT * FROM "GROUP_IMG";
SELECT * FROM "MEMBER_JOIN";
SELECT * FROM "BOND";
SELECT * FROM "POST";

COMMIT;